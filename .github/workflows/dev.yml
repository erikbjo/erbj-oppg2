name: 'dev'
on:
  workflow_dispatch:

  pull_request:
    branches:
      - dev
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - '*.yml'
    types:
      - closed

permissions:
  contents: read
  pull-requests: read

env:
  TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
  WORKING_DIR: '.'
  GH_TOKEN: ${{ github.token }}

jobs:
  validate:
    runs-on: ubuntu-latest
    name: 'validate'
    steps:
      - name: 'Checkout'
        id: checkout
        uses: actions/checkout@v4.1.7

      - name: 'Setup Terraform with Azure credentials'
        id: setup
        uses: './.github/actions/tfsetup'
        with:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          WORKSPACE: ${{ github.workflow }}

      - name: 'Checkov scan'
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.WORKING_DIR }}
          output_format: 'github_failed_only'
          download_external_modules: true
          output_file_path: 'checkov-report,'
          soft_fail: true

      - name: 'Parse links from checkov report'
        id: list_links
        shell: bash
        run: |
          LINKS=$(grep -oP 'https://docs.prismacloud.io[^\)]+' checkov-report)
          LINKS=$(echo "$LINKS" | tr '\n' ',' | sed 's/,$//')
          echo "LINKS=$LINKS" | tee -a $GITHUB_OUTPUT

      - name: 'Check Severity Level'
        id: check_severity_level
        uses: './.github/actions/checkseveritylevel'
        with:
          LINKS: ${{ steps.list_links.outputs.LINKS }}
          FAIL_ON_LEVEL: 'HIGH'

      # TODO: Step for tfsec scan

      - name: 'Terraform plan'
        id: plan
        run: terraform plan -out=tfplan

      # TODO: Step for uploading and accepting the plan, before new job for apply

  apply:
    needs: validate
    runs-on: ubuntu-latest
    name: 'apply'
    steps:
      - name: 'Checkout'
        id: checkout
        uses: actions/checkout@v4.1.7

      - name: 'Setup Terraform with Azure credentials'
        id: setup
        uses: './.github/actions/tfsetup'
        with:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          WORKSPACE: ${{ github.workflow }}

      # TODO: Download tfplan from validate job

      - name: 'Terraform apply'
        id: apply
        run: terraform apply -auto-approve tfplan

  # Eventual job for testing the infrastructure